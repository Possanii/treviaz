// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// user condominium data

model Condominium {
  id          String   @id @default(uuid())
  name        String
  address     Address  @relation(fields: [address_id], references: [id])
  address_id  String   @unique
  photo_url   String?
  owner_id    String
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  users       UserCondominium[]

  @@map("condominiums")
}

model Address {
  id           String   @id @default(uuid())
  street       String
  number       String
  complement   String?
  neighborhood String
  city         String
  state        String
  country      String
  zip_code     String
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
  condominium  Condominium?

  @@map("addresses")
}
model User {
  id              String   @id @default(uuid())
  name            String
  email           String   @unique
  document_number String
  avatar_url      String?
  password_hashed String
  created_at      DateTime @default(now())
  updated_at      DateTime      @updatedAt
  forumThreads    ForumThread[]
  forumPosts      ForumPost[]
  condominiums   UserCondominium[]

  @@map("users")
}

model UserCondominium {
  id              String   @id @default(uuid())
  user_id         String
  condominium_id  String
  role            Role
  joined_at       DateTime @default(now())

  user        User        @relation(fields: [user_id], references: [id])
  condominium Condominium @relation(fields: [condominium_id], references: [id])

  @@map("user_condominiums")
}

model ServiceOwner {
  id              String   @id @default(uuid())
  name            String
  document_number String
  email           String @unique
  phone           String
  password_hashed String
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt

  @@map("service_owners")
}

enum Role {
  RESIDENT
  ADMIN
  SYNDIC
  BILLING
  SERVICES
}



// Forum
model ForumCategory {
  id          String        @id @default(uuid())
  name        String        @unique
  description String
  created_at  DateTime      @default(now())
  updated_at  DateTime      @updatedAt
  threads     ForumThread[]

  @@map("forum_categories")
}

model ForumThread {
  id          String        @id @default(uuid())
  title       String
  created_at  DateTime      @default(now())
  updated_at  DateTime      @updatedAt
  category_id String
  user_id     String
  posts       ForumPost[]
  category    ForumCategory @relation(fields: [category_id], references: [id])
  user        User          @relation(fields: [user_id], references: [id])

  @@map("forum_threads")
}

model ForumPost {
  id         String      @id @default(uuid())
  content    String
  created_at DateTime    @default(now())
  updated_at DateTime    @updatedAt
  thread_id  String
  user_id    String
  thread     ForumThread @relation(fields: [thread_id], references: [id])
  user       User        @relation(fields: [user_id], references: [id])

  @@map("forum_posts")
}

// Services

